import unittest
import cv2
import numpy as np
import queue
import matplotlib.pyplot as plt
from Code import Greifpunkt as gp


class TestGreifpunkt(unittest.TestCase):

    # 1. Test, ob das Video richtig geladen wird

    def test_video_laden(self):
        video_path = 'C:/Users/Yusuf Sincar/Dropbox/PC/Desktop/EinhörnerUndKatzen/Videos/CatsUnicorns.mp4'
        cap = cv2.VideoCapture(video_path)

        self.assertTrue(cap.isOpened(), "Fehler beim Öffnen des Videos")

        cap.release()


        # 2. Test, ob die Wartezeit richtig berechnet worden ist

    def test_wartezeit_berechnen(self):
        cap = cv2.VideoCapture('C:/Users/Yusuf Sincar/Dropbox/PC/Desktop/EinhörnerUndKatzen/Videos/CatsUnicorns.mp4')
        fps = cap.get(cv2.CAP_PROP_FPS)
        wait_time = int(1000 / fps)

        self.assertEqual(wait_time, 33, "Ungültige Wartezeit")
        self.assertIsInstance(wait_time, int, "Die Wartezeit sollte eine ganze Zahl sein")
        self.assertNotEqual(fps, 0, "Die Bildrate sollte nicht null sein")

        cap.release()


        # 3. Test, ob das Bild richtig skaliert wird

    def test_bild_skalieren(self):
        frame = np.zeros((480, 640, 3), np.uint8)
        scale_percent = 50
        width = int(frame.shape[1] * scale_percent / 100)
        height = int(frame.shape[0] * scale_percent / 100)
        dim = (width, height)
        resized_frame = cv2.resize(frame, dim, interpolation=cv2.INTER_AREA)

        self.assertEqual(resized_frame.shape[1], 320, "Ungültige Breite des skalierten Bildes")
        self.assertEqual(resized_frame.shape[0], 240, "Ungültige Höhe des skalierten Bildes")


        # 4. Test, ob der Greifpunkt richtig ermittelt wird

    def test_greifpunkt_ermitteln(self):
        frame = np.zeros((480, 640, 3), np.uint8)
        bounding_box = frame[100:200, 200:300]

        gripping_point = gp.grippingPoint(bounding_box)

        self.assertIsInstance(gripping_point, tuple, "Der Greifpunkt sollte ein Tupel sein")
        self.assertEqual(len(gripping_point), 2, "Der Greifpunkt sollte 2 Koordinaten enthalten")


# Hauptprogramm

if __name__ == '__main__':

    if unittest.main():
        print("Alle Tests wurden erfolgreich durchgeführt.")
    else:
        print("Es sind Fehler bei der Durchführung der Tests aufgetreten.")
